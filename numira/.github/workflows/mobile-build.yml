name: Mobile App Build

on:
  push:
    branches: [ main ]
    paths:
      - 'client/**'
      - 'package.json'
      - '.github/workflows/mobile-build.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'client/**'
      - 'package.json'
  workflow_dispatch:

jobs:
  build-android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          npm ci
          cd client
          npm ci
          
      - name: Build web app
        run: |
          cd client
          npm run build
          
      - name: Set up Capacitor
        run: |
          cd client
          npm run cap:init || true
          npm run cap:add:android || true
          
      - name: Update Capacitor
        run: |
          cd client
          npm run cap:sync
          
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
          
      - name: Build Android App
        run: |
          cd client/android
          ./gradlew assembleDebug
          
      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: app-debug
          path: client/android/app/build/outputs/apk/debug/app-debug.apk
          
  build-ios:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          npm ci
          cd client
          npm ci
          
      - name: Build web app
        run: |
          cd client
          npm run build
          
      - name: Set up Capacitor
        run: |
          cd client
          npm run cap:init || true
          npm run cap:add:ios || true
          
      - name: Update Capacitor
        run: |
          cd client
          npm run cap:sync
          
      - name: Install CocoaPods
        run: |
          cd client/ios/App
          pod install
          
      - name: Build iOS App
        run: |
          cd client/ios/App
          xcodebuild -workspace App.xcworkspace -scheme App -configuration Debug -sdk iphonesimulator -derivedDataPath build
          
      - name: Upload iOS build
        uses: actions/upload-artifact@v3
        with:
          name: ios-build
          path: client/ios/App/build/Build/Products/Debug-iphonesimulator/App.app
          
  create-release:
    needs: [build-android, build-ios]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Download Android APK
        uses: actions/download-artifact@v3
        with:
          name: app-debug
          path: artifacts/android
          
      - name: Download iOS build
        uses: actions/download-artifact@v3
        with:
          name: ios-build
          path: artifacts/ios
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release v${{ github.run_number }}
          draft: false
          prerelease: false
          
      - name: Upload Android APK to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/android/app-debug.apk
          asset_name: numira-android-v${{ github.run_number }}.apk
          asset_content_type: application/vnd.android.package-archive
          
      - name: Zip iOS build
        run: |
          cd artifacts/ios
          zip -r numira-ios-v${{ github.run_number }}.zip App.app
          
      - name: Upload iOS build to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/ios/numira-ios-v${{ github.run_number }}.zip
          asset_name: numira-ios-v${{ github.run_number }}.zip
          asset_content_type: application/zip
